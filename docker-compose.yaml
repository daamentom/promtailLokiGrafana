name: ${PROJECT_NAME}

services:

  loki:
    image: grafana/loki
    container_name: ${LOKI_CONTAINER_NAME}
    env_file: .env
    volumes:
      - ./configs/loki-config.yaml:/mnt/config/loki-config.yaml
    ports:
      - ${LOKI_PORT}:${LOKI_PORT}
    command:
      - -config.file=/mnt/config/loki-config.yaml
    networks:
      - monitoring_network


  grafana:
    image: grafana/grafana
    container_name: $GrafanaTEST
    env_file: .env
    volumes:
      - ./configs/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yml
    ports:
      - ${GRAFANA_PORT}:${GRAFANA_PORT}
    depends_on:
      - loki
      - tempo
    networks:
      - monitoring_network

  promtail:
    image: grafana/promtail
    container_name: ${PROMTAIL_CONTAINER_NAME}
    env_file: .env
    volumes:
      - ./configs/promtail-config.yaml:/mnt/config/promtail-config.yaml
      - /var/log:/var/log
      - /home/tom/Projects/promtailLokiGrafana/NODE-LOGGING-APP/logs:/mnt/logs
      # - ./localstack/logs:/var/log/localstack 
      # - ./localstack/s3/logs:/var/log/localstack/s3
    ports:
      - ${PROMTAIL_PORT}:${PROMTAIL_PORT}
    depends_on:
      - loki
    command: -config.file=/mnt/config/promtail-config.yaml
    networks:
      - monitoring_network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379-6379"
    networks:
      - monitoring_network
    

  tempo:
    image: grafana/tempo
    container_name: tempo

    command: -config.file=/mnt/config/tempo-config.yaml
    volumes:
      - ./configs/tempo-config.yaml:/etc/tempo-config.yaml
      - ./tempo-data:/var/tempo
    ports:
      - "14268:14268"  # jaeger ingest
      - "3200:3200"   # tempo
      - "9095:9095" # tempo grpc
      - "4317:4317"  # otlp grpc
      - "4318:4318"  # otlp http
      - "9411:9411"   # zipkin
    depends_on:
      - redis
    networks:
      - monitoring_network
  
  k6-tracing:
    image: ghcr.io/grafana/xk6-client-tracing:v0.0.5
    environment:
      - ENDPOINT=tempo:4317
    restart: always
    depends_on:
      - tempo
    networks:
      - monitoring_network


  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
      - --enable-feature=native-histograms
    volumes:
      - ../shared/prometheus.yaml:/etc/prometheus.yaml
    ports:
      - "9090:9090"
    networks:
      - monitoring_network

  mimir: 
    image: grafana/mimir:latest
    container_name: mimir
    volumes:
      - ./configs/mimir-config.yaml:/etc/mimir/config.yaml
      - ./mimir-data:/mimir
    ports:
      - "9009-9009"
    command: -config.file=/etc/mimir/config.yaml
    depends_on:
      - grafana
    networks:
      - monitoring_network

  otelcol:
    image: otel/opentelemetry-collector
    container_name: otelcol
    ports:
      - "4317:4317"  # OTLP gRPC
      - "4318:4318"  # OTLP HTTP
      - "9411:9411"  # Zipkin
    volumes:
      - ./configs/otel-config.yaml:/etc/otel/config.yaml
    command: --config.file=/etc/otel/config.yaml
    depends_on:
      - loki
      - tempo
      - mimir
      - grafana
    networks:
      - monitoring_network
  


  localstack:
    container_name: localstackTest
    image: localstack/localstack:3.4.0
    ports:
      - "4566:4566"
    environment:
      - AWS_DEFAULT_REGION=eu-central-1
      - SERVICES=s3, ec2
      - DEBUG=1
      - START_WEB=1
      - HOSTNAME=localstack
      - LOCALSTACK_AUTH_TOKEN="ls-LuVesiKI-1674-vApA-LuCI-NAku05631949"
    volumes:
      - ./init-resources.sh:/etc/localstack/init/ready.d/init-resources.sh
      - ./localstack/logs:/var/log/localstack
    networks:
      - monitoring_network

networks:
  monitoring_network:
    driver: bridge
